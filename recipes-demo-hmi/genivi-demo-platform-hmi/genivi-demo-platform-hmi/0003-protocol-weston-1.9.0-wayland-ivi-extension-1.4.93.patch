From b8e0bb29a8b5546ba289c76a352b38e83f2acee0 Mon Sep 17 00:00:00 2001
From: Nobuhiko Tanibata <ntanibata@jp.adit-jv.com>
Date: Sat, 10 Oct 2015 10:56:46 +0900
Subject: [PATCH 3/7] protocol: weston 1.9.0 wayland-ivi-extension 1.4.93

---
 protocol/ivi-application.xml    | 164 +++++++++++++++++++++-------------------
 protocol/ivi-controller.xml     |  36 +--------
 protocol/ivi-hmi-controller.xml | 154 ++++++++++++++++++-------------------
 3 files changed, 167 insertions(+), 187 deletions(-)

diff --git a/protocol/ivi-application.xml b/protocol/ivi-application.xml
index 0c3fb8c..8f24226 100644
--- a/protocol/ivi-application.xml
+++ b/protocol/ivi-application.xml
@@ -1,88 +1,100 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <protocol name="ivi_application">
 
-    <copyright>
+  <copyright>
     Copyright (C) 2013 DENSO CORPORATION
     Copyright (c) 2013 BMW Car IT GmbH
 
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the "Software"), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
+    Permission is hereby granted, free of charge, to any person obtaining a
+    copy of this software and associated documentation files (the "Software"),
+    to deal in the Software without restriction, including without limitation
+    the rights to use, copy, modify, merge, publish, distribute, sublicense,
+    and/or sell copies of the Software, and to permit persons to whom the
+    Software is furnished to do so, subject to the following conditions:
 
-    The above copyright notice and this permission notice shall be included in
-    all copies or substantial portions of the Software.
+    The above copyright notice and this permission notice (including the next
+    paragraph) shall be included in all copies or substantial portions of the
+    Software.
 
     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-    THE SOFTWARE.
-    </copyright>
-
-    <interface name="ivi_surface" version="1">
-        <description summary="application interface to surface in ivi compositor"/>
-
-        <request name="destroy" type="destructor">
-            <description summary="destroy ivi_surface">
-                This removes link from ivi_id to wl_surface and destroys ivi_surface.
-            </description>
-        </request>
-
-        <event name="visibility">
-            <description summary="visibility of surface in ivi compositor has changed">
-                The new visibility state is provided in argument visibility.
-                If visibility is 0, the surface has become invisible.
-                If visibility is not 0, the surface has become visible.
-            </description>
-            <arg name="visibility" type="int"/>
-        </event>
-
-	<event name="configure">
-	    <description summary="suggest resize">
-	      The configure event asks the client to resize its surface.
-
-	      The size is a hint, in the sense that the client is free to
-	      ignore it if it doesn't resize, pick a smaller size (to
-	      satisfy aspect ratio or resize in steps of NxM pixels).
-
-	      The client is free to dismiss all but the last configure
-	      event it received.
-
-	      The width and height arguments specify the size of the window
-	      in surface local coordinates.
-	    </description>
-	    <arg name="width" type="int"/>
-	    <arg name="height" type="int"/>
-	</event>
-    </interface>
-
-    <interface name="ivi_application" version="1">
-        <description summary="create ivi-style surfaces">
-	    This interface is implemented by servers that provide desktop-style user interfaces.
-	    It allows clients to associate a ivi_surface with a basic surface.
-	</description>
-
-        <request name="surface_create">
-            <description summary="create ivi_surface with numeric ID in ivi compositor">
-                surface_create will create a interface:ivi_surface with numeric ID; ivi_id in
-                ivi compositor. These ivi_ids are defined as unique in the system to identify
-                it inside of ivi compositor. The ivi compositor implements business logic how to
-                set properties of the surface with ivi_id according to status of the system.
-                E.g. a unique ID for Car Navigation application is used for implementing special
-                logic of the application about where it shall be located.
-		if a wl_surface which already has another role is set, the server regards this as
-		error and disconnects the client.
-            </description>
-            <arg name="ivi_id" type="uint"/>
-            <arg name="surface" type="object" interface="wl_surface"/>
-            <arg name="id" type="new_id" interface="ivi_surface"/>
-        </request>
-
-    </interface>
+    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+    DEALINGS IN THE SOFTWARE.
+  </copyright>
+
+  <interface name="ivi_surface" version="1">
+    <description summary="application interface to surface in ivi compositor"/>
+
+    <request name="destroy" type="destructor">
+      <description summary="destroy ivi_surface">
+        This removes link from ivi_id to wl_surface and destroys ivi_surface.
+        The ID, ivi_id, is free and can be used for surface_create again.
+      </description>
+    </request>
+
+    <event name="configure">
+      <description summary="suggest resize">
+        The configure event asks the client to resize its surface.
+
+        The size is a hint, in the sense that the client is free to
+        ignore it if it doesn't resize, pick a smaller size (to
+        satisfy aspect ratio or resize in steps of NxM pixels).
+
+        The client is free to dismiss all but the last configure
+        event it received.
+
+        The width and height arguments specify the size of the window
+        in surface local coordinates.
+      </description>
+      <arg name="width" type="int"/>
+      <arg name="height" type="int"/>
+    </event>
+  </interface>
+
+  <interface name="ivi_application" version="1">
+    <description summary="create ivi-style surfaces">
+      This interface is exposed as a global singleton.
+      This interface is implemented by servers that provide IVI-style user interfaces.
+      It allows clients to associate a ivi_surface with wl_surface.
+    </description>
+
+    <enum name="error">
+      <entry name="role" value="0" summary="given wl_surface has another role"/>
+      <entry name="ivi_id" value="1" summary="given ivi_id is assigned to another wl_surface"/>
+    </enum>
+
+    <request name="surface_create">
+      <description summary="create ivi_surface with numeric ID in ivi compositor">
+        This request gives the wl_surface the role of an IVI Surface. Creating more than
+        one ivi_surface for a wl_surface is not allowed. Note, that this still allows the
+        following example:
+
+         1. create a wl_surface
+         2. create ivi_surface for the wl_surface
+         3. destroy the ivi_surface
+         4. create ivi_surface for the wl_surface (with the same or another ivi_id as before)
+
+        surface_create will create a interface:ivi_surface with numeric ID; ivi_id in
+        ivi compositor. These ivi_ids are defined as unique in the system to identify
+        it inside of ivi compositor. The ivi compositor implements business logic how to
+        set properties of the surface with ivi_id according to status of the system.
+        E.g. a unique ID for Car Navigation application is used for implementing special
+        logic of the application about where it shall be located.
+        The server regards following cases as protocol errors and disconnects the client.
+         - wl_surface already has an nother role.
+         - ivi_id is already assigned to an another wl_surface.
+
+        If client destroys ivi_surface or wl_surface which is assigne to the ivi_surface,
+        ivi_id which is assigned to the ivi_surface is free for reuse.
+      </description>
+      <arg name="ivi_id" type="uint"/>
+      <arg name="surface" type="object" interface="wl_surface"/>
+      <arg name="id" type="new_id" interface="ivi_surface"/>
+    </request>
+
+  </interface>
 
 </protocol>
diff --git a/protocol/ivi-controller.xml b/protocol/ivi-controller.xml
index 7dfe4fa..521d625 100644
--- a/protocol/ivi-controller.xml
+++ b/protocol/ivi-controller.xml
@@ -1,4 +1,4 @@
-<?xml version="1.2" encoding="UTF-8"?>
+<?xml version="1.0" encoding="UTF-8"?>
 <protocol name="ivi_controller">
 
     <copyright>
@@ -259,40 +259,6 @@
             <arg name="content_state" type="int"/>
         </event>
 
-        <request name="set_input_focus">
-            <description summary="set input focus to this surface">
-                Set input focus state of surface in ivi compositor. If the surface has input
-                focus, all non-graphical inputs (e.g. keyboard) are directed to the application
-                providing the content for this surface.
-                Only one surface can have input focus at a time, so if input focus is enabled
-                for one surface, any other surface with input focus will loose focus.
-                If argument enabled is 0, the input focus from this surface is removed, no
-                surface will have input focus.
-                If argument enabled is not 0, input focus for this surface is enabled.
-            </description>
-            <arg name="device" type="uint"/>
-            <arg name="enabled" type="int"/>
-        </request>
-
-        <event name="input_focus">
-            <description summary="input focus of surface in ivi compositor has changed">
-                The new input focus state is provided in argument enabled: If enabled is 0,
-                this surface has no longer the input focus. If enbaled is not 0, this surface
-                now has input focus enabled.
-            </description>
-            <arg name="device" type="uint"/>
-            <arg name="enabled" type="int"/>
-        </event>
-
-        <enum name="input_device">
-            <description summary="brief Identifier of different input device types. Can be used as a bitmask.">
-            </description>
-            <entry name="keyboard" value="0x1"/>
-            <entry name="pointer" value="0x2"/>
-            <entry name="touch" value="0x4"/>
-            <entry name="all" value="~0x0"/>
-        </enum>
-
     </interface>
 
     <interface name="ivi_controller_layer" version="1">
diff --git a/protocol/ivi-hmi-controller.xml b/protocol/ivi-hmi-controller.xml
index fd5ce2b..826763c 100644
--- a/protocol/ivi-hmi-controller.xml
+++ b/protocol/ivi-hmi-controller.xml
@@ -1,96 +1,98 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <protocol name="ivi_hmi_controller">
 
-    <copyright>
+  <copyright>
     Copyright (C) 2013 DENSO CORPORATION
+    Copyright (c) 2013 BMW Car IT GmbH
 
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the "Software"), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
+    Permission is hereby granted, free of charge, to any person obtaining a
+    copy of this software and associated documentation files (the "Software"),
+    to deal in the Software without restriction, including without limitation
+    the rights to use, copy, modify, merge, publish, distribute, sublicense,
+    and/or sell copies of the Software, and to permit persons to whom the
+    Software is furnished to do so, subject to the following conditions:
 
-    The above copyright notice and this permission notice shall be included in
-    all copies or substantial portions of the Software.
+    The above copyright notice and this permission notice (including the next
+    paragraph) shall be included in all copies or substantial portions of the
+    Software.
 
     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-    THE SOFTWARE.
-    </copyright>
+    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+    DEALINGS IN THE SOFTWARE.
+  </copyright>
 
-    <interface name="ivi_hmi_controller" version="1">
-        <description summary="set up and control IVI style UI"/>
+  <interface name="ivi_hmi_controller" version="1">
+    <description summary="set up and control IVI style UI"/>
 
-        <request name="UI_ready">
-            <description summary="inform the ready for drawing desktop." />
-        </request>
+    <request name="UI_ready">
+      <description summary="inform the ready for drawing desktop." />
+    </request>
 
-        <request name="workspace_control">
-            <description summary="start controlling a surface by server">
-                Reference protocol to control a surface by server.
-                To control a surface by server, it gives seat to the server
-		to e.g. control Home screen. Home screen has several workspaces
-		to group launchers of wayland application. These workspaces
-		are drawn on a horizontally long surface to be controlled
-		by motion of input device. E.g. A motion from right to left
-		happens, the viewport of surface is controlled in the ivi-shell
-		by using ivi-layout. client can recognizes the end of controlling
-		by event "workspace_end_control".
-            </description>
-            <arg name="seat" type="object" interface="wl_seat"/>
-            <arg name="serial" type="uint"/>
-        </request>
+    <request name="workspace_control">
+      <description summary="start controlling a surface by server">
+        Reference protocol to control a surface by server.
+        To control a surface by server, it gives seat to the server
+        to e.g. control Home screen. Home screen has several workspaces
+        to group launchers of wayland application. These workspaces
+        are drawn on a horizontally long surface to be controlled
+        by motion of input device. E.g. A motion from right to left
+        happens, the viewport of surface is controlled in the ivi-shell
+        by using ivi-layout. client can recognizes the end of controlling
+        by event "workspace_end_control".
+      </description>
+      <arg name="seat" type="object" interface="wl_seat"/>
+      <arg name="serial" type="uint"/>
+    </request>
 
-        <enum name="layout_mode">
-            <entry name="tiling" value="0"/>
-            <entry name="side_by_side" value="1"/>
-            <entry name="full_screen" value="2"/>
-            <entry name="random" value="3" />
-        </enum>
+    <enum name="layout_mode">
+      <entry name="tiling" value="0"/>
+      <entry name="side_by_side" value="1"/>
+      <entry name="full_screen" value="2"/>
+      <entry name="random" value="3" />
+    </enum>
 
-        <request name="switch_mode">
-            <description summary="request mode switch of application layout">
-		hmi-controller loaded to ivi-shall implements 4 types of layout
-		as a reference; tiling, side by side, full_screen, and random.
-	    </description>
-            <arg name="layout_mode" type="uint"/>
-        </request>
+    <request name="switch_mode">
+      <description summary="request mode switch of application layout">
+        hmi-controller loaded to ivi-shall implements 4 types of layout
+        as a reference; tiling, side by side, full_screen, and random.
+      </description>
+      <arg name="layout_mode" type="uint"/>
+    </request>
 
-        <enum name="home">
-            <entry name="off" value="0"/>
-            <entry name="on" value="1"/>
-        </enum>
+    <enum name="home">
+      <entry name="off" value="0"/>
+      <entry name="on" value="1"/>
+    </enum>
 
-        <request name="home">
-            <description summary="request displaying/undisplaying home screen">
-		home screen is a reference implementation of launcher to launch
-		wayland applications. The home screen has several workspaces to
-		group wayland applications. By defining the following keys in
-		weston.ini, user can add launcher icon to launch a wayland application
-		to a workspace.
-		[ivi-launcher]
-		workspace-id=0
-			: id of workspace to add a launcher
-		icon-id=4001
-			: ivi id of ivi_surface to draw a icon
-		icon=/home/user/review/build-ivi-shell/data/icon_ivi_flower.png
-			: path to icon image
-		path=/home/user/review/build-ivi-shell/weston-dnd
-			: path to wayland application
-	    </description>
-            <arg name="home" type="uint"/>
-        </request>
+    <request name="home">
+      <description summary="request displaying/undisplaying home screen">
+        home screen is a reference implementation of launcher to launch
+        wayland applications. The home screen has several workspaces to
+        group wayland applications. By defining the following keys in
+        weston.ini, user can add launcher icon to launch a wayland application
+        to a workspace.
+        [ivi-launcher]
+        workspace-id=0
+		: id of workspace to add a launcher
+        icon-id=4001
+		: ivi id of ivi_surface to draw a icon
+        icon=/home/user/review/build-ivi-shell/data/icon_ivi_flower.png
+		: path to icon image
+        path=/home/user/review/build-ivi-shell/weston-dnd
+		: path to wayland application
+      </description>
+      <arg name="home" type="uint"/>
+    </request>
 
-        <event name="workspace_end_control">
-            <description summary="notify controlling workspace end"/>
-            <arg name="is_controlled" type="int"/>
-        </event>
+    <event name="workspace_end_control">
+      <description summary="notify controlling workspace end"/>
+      <arg name="is_controlled" type="int"/>
+    </event>
 
-    </interface>
+  </interface>
 
 </protocol>
-- 
1.8.3.1

